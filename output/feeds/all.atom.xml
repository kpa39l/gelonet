<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Стороженко Евгений Владимирович</title><link href="http://localhost:8000/" rel="alternate"></link><link href="http://localhost:8000/feeds/all.atom.xml" rel="self"></link><id>http://localhost:8000/</id><updated>2020-06-06T15:37:27+03:00</updated><subtitle>Субьективно обо всем вокруг</subtitle><entry><title>"Сломанные" ссылки изображений на страницах статей в Pelican</title><link href="http://localhost:8000/2020/06/06/broken-links-on-pics" rel="alternate"></link><published>2020-06-06T15:37:27+03:00</published><updated>2020-06-06T15:37:27+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2020-06-06:/2020/06/06/broken-links-on-pics</id><summary type="html">&lt;p&gt;Как починить  битые ссылки на изображения на страницах отличных от индекса&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Cover" height="195" src="http://localhost:8000/2020/06/06/broken-links-on-pics/cover.png" width="320"&gt;&lt;/p&gt;
&lt;h1&gt;Проблема&lt;/h1&gt;
&lt;p&gt;Есть Markdown-страница в каталоге content/mypage.md, на основе которой был сгенерирован файл &lt;code&gt;localhost:8000/mypage.html&lt;/code&gt;, и в нем есть рабочая ссылка на изображение:
&lt;code&gt;![Alt text](content/myimage.png)&lt;/code&gt;
которая в сгенерированном файле выглядит как:
&lt;code&gt;&amp;lt;img src="content/myimage.png" /&amp;gt;&lt;/code&gt;
и ссылается на адрес &lt;code&gt;localhost:8000/content/myimage.png&lt;/code&gt;. Однако, если открыть тот же самый файл HTML со страницы с категориями, то так же ссылка на картинку
&lt;code&gt;![Alt text](content/myimage.png)&lt;/code&gt;
с тем же самым HTML кодом
&lt;code&gt;&amp;lt;img src="content/myimage.png" /&amp;gt;&lt;/code&gt;
но со страницы со списком статей по категории &lt;code&gt;localhost:8000/categories/mycategory.html&lt;/code&gt;, этот относительный URL-адрес картинкитеперь ссылается на &lt;code&gt;localhost:8000/categories/content/myimage.png&lt;/code&gt; и изображение не отображется со страниц категорий или тэгов, поскольку ссылка битая.
В итоге получается что проблема заключается в том, что используются относительные URL-адреса изображений.&lt;/p&gt;
&lt;h1&gt;Решение&lt;/h1&gt;
&lt;p&gt;Решение очень простое: использвоать еще один &lt;code&gt;/&lt;/code&gt;. Используйте абсолютные ссылки на изображения в Markdown файлах добавляя в начало ведущий &lt;code&gt;/&lt;/code&gt;.  Вместо использования ссылок вида &lt;code&gt;content/myimage.png&lt;/code&gt;, пользуйтесь &lt;code&gt;/content/myimage.png&lt;/code&gt;:
&lt;code&gt;![Alt text](/content/myimage.png)&lt;/code&gt;
И такая ссылка на изображение всегда будет генерировать ссылку  &lt;code&gt;localhost:8000/content/myimage.png&lt;/code&gt;, вне зависимости от того на какой странице это будет.&lt;/p&gt;
&lt;p&gt;Я так чинил ссылки на аватарку. На Индексной странице она отображалась нормально, но на странице категорий, тэгов или даже самих статей ссылка билась. Для исправления в файле настроек &lt;code&gt;pelicanconf.py&lt;/code&gt; я указал следующие настройки с абсолютными ссылками:
&lt;code&gt;SITELOGO = '/images/avatar1.jpg'
FAVICON = '/images/favicon.ico'&lt;/code&gt;
И это полностью решило проблему.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/30794909/pelican-image-links-break-when-viewing-article-through-categories"&gt;Источник&lt;/a&gt;&lt;/p&gt;</content><category term="Блог"></category><category term="pelican"></category></entry><entry><title>Flex: Используем темы Pelican</title><link href="http://localhost:8000/2020/05/14/using-themes" rel="alternate"></link><published>2020-05-14T23:02:00+03:00</published><updated>2020-05-14T23:02:00+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2020-05-14:/2020/05/14/using-themes</id><summary type="html">&lt;p&gt;Как подключить к сайту на Pelican тему оформления&lt;/p&gt;</summary><content type="html">&lt;!-- Cover:  --&gt;

&lt;hr&gt;
&lt;h1&gt;Используем темы&lt;/h1&gt;
&lt;p&gt;Подразумевается, что перед использованием информации из данной инструкции Вы уже прочитали документацию на Pelican, подготовили сайт и сформировалось жеение применить тему оформления отличную от умолчальной.&lt;/p&gt;
&lt;p&gt;Во-первых, необходимо выбрать место хранения тем оформления. Для этого примера будет использоваться директория , но Вы можете использовать любую другую. Клонируйем репозиторий pelican-themes в выбранную директорию на локальном компьютере:
&lt;code&gt;cd ~/pelican/projects/gelonet.ru
git clone --recursive https://github.com/getpelican/pelican-themes ./pelican-themes&lt;/code&gt;
Теперь в этой папке будет храниться содержимое репозитория.&lt;/p&gt;
&lt;p&gt;Для использования одной из полученных тем оформления нужно добавить в файл конфигурации pelican следующую строчку:
&lt;code&gt;THEME = "/home/user/pelican-themes/theme-name"&lt;/code&gt;
Например, чтобы использовать тему Flex, следует добавить вот такую строку:
&lt;code&gt;THEME = "/home/user/pelican-themes/Flex"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Сохраните изменения в файле конфигурации и перегенерируйте сайт одним из доступных средс, например с использвоанием make-файла, который был сформирован во время использования команды &lt;code&gt;pelican-quickstart&lt;/code&gt;:
&lt;code&gt;make html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Так же можно указать тему используемую для генерации сайта через параметр &lt;code&gt;-t ~/pelican-themes/Themes&lt;/code&gt; команды &lt;code&gt;pelican&lt;/code&gt;. Если требуется изменить стандартную тему, проверьте что все изменения производятся в копиях файлов темы в отдельном каталоге &lt;code&gt;~/pelican-themes/your-theme&lt;/code&gt;. Все изменения в файлах темы сгенерированных в директории output будут удалены при следующей генерации сайта.&lt;/p&gt;</content><category term="Блог"></category><category term="pelican"></category><category term="python"></category><category term="theme"></category></entry><entry><title>Быстрый старт с Pelican</title><link href="http://localhost:8000/2020/05/11/pelican-quickstart" rel="alternate"></link><published>2020-05-11T08:00:00+03:00</published><updated>2020-05-11T08:00:00+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2020-05-11:/2020/05/11/pelican-quickstart</id><summary type="html">&lt;p&gt;Как быстро запустить Pelican в работу&lt;/p&gt;</summary><content type="html">&lt;!-- Cover: images/flex-screenshot.png --&gt;

&lt;hr&gt;
&lt;h1&gt;Быстрый старт&lt;/h1&gt;
&lt;p&gt;Настоятельно рекомендую прочитать полную версию документации, но для особо нетерпеливых ниже представлен ряд шагов, чтобы быстро начать работу.&lt;/p&gt;
&lt;h1&gt;Подготовка&lt;/h1&gt;
&lt;p&gt;В системе GNU/Linux Debian Buster по-умолчанию уже устанолен Python 3.7 Установим утилиту для создния виртуального окружения venv.
&lt;code&gt;$ sudo aptitude install python3-venv&lt;/code&gt;
Он включает в свой состав утилиты pip для установки пакетов&lt;/p&gt;
&lt;p&gt;Создаем каталог в котором будет работать Pelican:
&lt;code&gt;$ mkdir pelican &amp;amp;&amp;amp; cd pelican&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Создаем внутри каталога виртуальную среду Pytnon &lt;code&gt;$ python3 -m venv pelicanenv&lt;/code&gt; и активируем её командой &lt;code&gt;$ source pelicanenv/bin/activate&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;Установка&lt;/h1&gt;
&lt;p&gt;Устанавливаем Pelican (и дополнительно Markdown) на Python 3.7+, выполнив следующую команду в терминале:
&lt;code&gt;(pelicanenv) $ pip install pelican[Markdown]&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;Создание проекта&lt;/h1&gt;
&lt;p&gt;Выбираем имя для проекта и создаем каталог с соответствующим именем для сайта и переходим в этот каталог:
&lt;code&gt;(pelicanenv) $ mkdir -p ./projects/yoursite.ru
(pelicanenv) $ cd ./projects/yoursite.ru&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Дальше создаем основу для проекта с помощью команды &lt;code&gt;pelican-quickstart&lt;/code&gt;. Эта команда задаст несколько вопросов о создаваемом сайте. На вопрос о URL адресе сайта следует ответить в том же виде как будет отображено в примере http://yoursite.ru&lt;/p&gt;
&lt;h1&gt;Создаем статью&lt;/h1&gt;
&lt;p&gt;Для того чтобы запустить Pelican потребуется создать хотя бы одну статью. Для этого в любом тектосовм редакторе создаем файл со следующим cодержимым:
`Title: Мой Первый Отзыв
Date: 2020-05-04 10:20
Category: Обзор&lt;/p&gt;
&lt;p&gt;Ниже приведен обзор моей любимой механической клавиатуры.`&lt;/p&gt;
&lt;p&gt;Поскольку эта статья для примера рассматривает работу с данными в формате Markdown, то сохранить его нужно как &lt;code&gt;./projects/yoursite.ru/content/keyboard-review.md&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Генерируем сайт&lt;/h1&gt;
&lt;p&gt;В корневом каталоге проекта &lt;code&gt;./projects/yoursite.ru/&lt;/code&gt;выполните pelican-команду для создания сайта:
&lt;code&gt;(pelicanenv) $ pelican content&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;В результате выполенния команды сайт был создан внутри каталога &lt;code&gt;./projects/yoursite.ru/output&lt;/code&gt;. В процесе работы могут отобразиться предупреждения, относящееся к RSS лентам, но это нормально при локальном развертывании и можно пока не обращать на них внимание.&lt;/p&gt;
&lt;h1&gt;Предварительный просмотр сайта&lt;/h1&gt;
&lt;p&gt;Открываем сеанс терминала, перейдим в корневой каталог проекта &lt;code&gt;./projects/yoursite.ru/&lt;/code&gt;и выполняем команду для запуска веб-сервера Pelican:
&lt;code&gt;(pelicanenv) pelican --listen&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Теперь просмотреть сгенерированный сайт можно перейдя на http://localhost:8000/ в браузере.&lt;/p&gt;
&lt;p&gt;Более подробная информация содержится вдокументации, продолжайте изучать её. Так же на странице &lt;a href="https://github.com/getpelican/pelican/wiki/Tutorials"&gt;Tutorials&lt;/a&gt; wiki Pelican приведены ссылки на опубликованные сообществом руководства.&lt;/p&gt;
&lt;h1&gt;Источники&lt;/h1&gt;
&lt;p&gt;https://python-scripts.com/virtualenv
https://docs.getpelican.com/en/stable/quickstart.html&lt;/p&gt;</content><category term="Блог"></category><category term="pelican"></category><category term="doc"></category></entry><entry><title>Настройка редактора Atom для работы с Markdown</title><link href="http://localhost:8000/2020/05/07/set-atom-to-work-with-markdown" rel="alternate"></link><published>2020-05-07T22:14:00+03:00</published><updated>2020-05-07T22:14:00+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2020-05-07:/2020/05/07/set-atom-to-work-with-markdown</id><summary type="html">&lt;p&gt;Настройка редактора Атом для работы со статическими блогами с разметкой на markdown&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Cover" src="http://localhost:8000/2020/05/07/set-atom-to-work-with-markdown/cover.png"&gt;&lt;/p&gt;
&lt;h1&gt;Настройка редактора Atom для работы с Markdown&lt;/h1&gt;
&lt;p&gt;Для работы над статическим сайтом нужно:
- Редактировать файлы Markdown
- Хранить файлы в "безопасном" месте. Чтобы случайно их не потерять
- Облегчить себе работу по формирофанию необходимой сужебной информации внутри файлов (Front Matter)&lt;/p&gt;
&lt;p&gt;GitHub поможет решить вопрос хранения файлов со статьями и новостямии, а вот
удобного редактирования и наполнения файлов можно решить практически любым редактором
кода. Для себя я выбрал редактор от авторов GitHub - &lt;a href="https://atom.io" title="Atom"&gt;Atom&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Это современные кросс платформенный редактор кода, с множеством удобным плагинов и, что самое важное, встроенной интеграцией с
Github. Что позволяет собрать функионально рабочее место для работы над блогом буквально
за 15 минут. И не беспокоиться о том, что с таким трудом созданные данные будут утеряны
из-за аппаратного или программного сбоя.&lt;/p&gt;
&lt;p&gt;Поскольку работаю я на GNU/Linux Debian, то и процесс настройки буду описывать для этой операционной
системы.&lt;/p&gt;
&lt;p&gt;Скачиваем пакет с сайта &lt;a href="https://atom.io" title="Atom"&gt;Atom&lt;/a&gt;.
&lt;img alt="Главная страница atom.io" src="http://localhost:8000/2020/05/07/set-atom-to-work-with-markdown/atom-download.png"&gt;    &lt;br&gt;
Устанавливаем зависимости:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo aptitude install git, libgconf-2-4, libgtk-3-0, libgcrypt20, libnotify4,
libxtst6, libnss3, python, gvfs-bin, xdg-utils, libx11-xcb1, libxss1, libasound2,
 libxkbfile1, libcurl4, policykit-1, lsb-release
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Первое, что следует сделать после установки Git — указать своё имя и адрес электронной почты. Это важно, потому что каждый коммит в Git содержит эту информацию, и она включена в коммиты, передаваемые вами, и не может быть далее изменена:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git config --global user.name &lt;span class="s2"&gt;&amp;quot;kpa39l&amp;quot;&lt;/span&gt;
$ git config --global user.email kpa39l@yandex.ru
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Если указана опция --global, то эти настройки достаточно сделать только один раз, поскольку в этом случае Git будет использовать эти данные для всего, что вы делаете в этой системе. Если для каких-то отдельных проектов вы хотите указать другое имя или электронную почту, можно выполнить эту же команду без параметра --global в каталоге с нужным проектом.&lt;/p&gt;
&lt;p&gt;Теперь устанавливаем сам редактор:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo dpkg -i ~/Загрузки/atom-amd64.deb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;После установки ярлык для запуска добавиться в раздел "Разработка" системного меню.
&lt;img alt="Расположения ярлыка в системном меню" src="http://localhost:8000/2020/05/07/set-atom-to-work-with-markdown/system-menu.png"&gt;&lt;/p&gt;
&lt;p&gt;Или можно его запустить используя команду в консоли от текущего пользователя:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ atom
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Для хранения файлов можно использовать репозиторий GitHub. Ведь именно для этого как раз и выбирался редактор Atom,как имеющий встроенную
интеграцию c GitHub. Для этого нужно получить ссылку для клонирования репозитория
&lt;img alt="Копируем ссылку для клонирования репозитория" src="http://localhost:8000/2020/05/07/set-atom-to-work-with-markdown/clone-repository.png"&gt;
&lt;code&gt;https://github.com/kpa39l/gelonet.git&lt;/code&gt;
Теперь при открытии панели с интеграцией с GitHUb (Ctrl + Shift + 8) и нажав кнопку "Clone existing repository" мы можем ввести в поле ввода эту ссылку. Чтобы не мучаться с авторизацией в ссылку можно добавить данные о логине и пароле, приведя её к виду:
&lt;code&gt;https://login:password@github.com/kpa39l/gelonet.git&lt;/code&gt;
Эти действия настроят интеграцию локальной папки с репозиторием на GitHub без редактирования
файлов конфигурации.&lt;/p&gt;
&lt;p&gt;Теперь для добства работы нужно добавить в Atom несколько плагинов для увеличения удобства работы со статическими блогами на Markdown. Для себя я определил следующий список:
- markdown-scroll-sync
- markdown-writer и зависящий от него
- tool-bar-markdown-writer&lt;/p&gt;
&lt;p&gt;Чтобы не искать их в списке пакетов достаточно выполнить в консоли команду:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ apm install markdown-scroll-sync tool-bar markdown-writer tool-bar-markdown-writer&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;В итоге при работе с Markdown  файлами в интерфейсе редактора появится вот такая панель:
&lt;img alt="Панель для работы c markdown" src="http://localhost:8000/blog/93.atom editor and markdown/md-panel.png"&gt;
Часто используемые инструменты Markdown-разметки отображаются в верхней части окна и при
необходимости можно их использовать.&lt;/p&gt;</content><category term="Блог"></category><category term="pelican"></category><category term="python"></category></entry><entry><title>Статические сайты</title><link href="http://localhost:8000/2020/05/02/static-site-generator" rel="alternate"></link><published>2020-05-02T14:36:00+03:00</published><updated>2020-05-02T14:36:00+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2020-05-02:/2020/05/02/static-site-generator</id><summary type="html">&lt;p&gt;Почему и как был выбран Pelican в качестве движка сайта&lt;/p&gt;</summary><content type="html">&lt;!-- Cover: images/flex-screenshot.png --&gt;

&lt;hr&gt;
&lt;h1&gt;Выбор генератора статического сайта&lt;/h1&gt;
&lt;p&gt;Анализ того ресурса, что размещен на хостинге и называется моим сайтом, показал что я замечательно и без проблем живу на flat cms Grav (плоская CMS без базы данных). При этом я здорово сэкономил на хостинге. Мой месячная абонплата на &lt;a href="http://jino.ru"&gt;jino.ru&lt;/a&gt;  не дотягивала даже до 80 рублей. Поэтому мне показалочь логичным сделать следующий шаг и перейти на полностью статический сайт генерируемый из текстовых файлов (мне понравился язык разметки Markdown), хранимых в каком-либо облаке, например на GitHub.&lt;/p&gt;
&lt;p&gt;Оказалось таких хитрецов как я полным-полно и в сети легко найти тонный инструментов для такой работы. Поскольку я неофит в Python и уже успел ознакомиться с шаблонизатором Jinja2, то и сформировал для себя следующий набор требований к генератору статического сайта:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Реализация на Python. Для работы и на ноутбуке с GNU\Linux и на домашнем компе с Windows 10. Опять же с исследовательскими целями полезно работать с инструментом написанном на Python.&lt;/li&gt;
&lt;li&gt;Работа с данными в файлах Markdown. Это удобный язык разметки, позволяющий легко реализовывать все нужные мне средства орагнизации текста.&lt;/li&gt;
&lt;li&gt;Работа с шаблонизатором Jinja2. Удобный и мощный шаболнизатор. Понравился мне он, да и папа мой называл меня в детстве Джинджя.&lt;/li&gt;
&lt;li&gt;Возможность работы с плагинами.
5.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;В итоге непродолжительных поисков нашёл в сети сайт &lt;a href="https://www.staticgen.com/"&gt;https://www.staticgen.com/&lt;/a&gt; и на нем по указанным параметрам отобрал вот такое вот решение:
&lt;a href="https://blog.getpelican.com/"&gt;https://blog.getpelican.com/&lt;/a&gt;
&lt;a href="https://github.com/getpelican/"&gt;https://github.com/getpelican/&lt;/a&gt;
&lt;a href="http://www.pelicanthemes.com/"&gt;http://www.pelicanthemes.com/&lt;/a&gt;&lt;/p&gt;</content><category term="Блог"></category><category term="pelican"></category><category term="site"></category></entry><entry><title>Профстандарт менеджера по ИТ - первый взгляд</title><link href="http://localhost:8000/2019/04/08/proffstandart-it-manager" rel="alternate"></link><published>2019-04-08T19:31:00+03:00</published><updated>2019-04-08T19:31:00+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2019-04-08:/2019/04/08/proffstandart-it-manager</id><summary type="html">&lt;p&gt;Знакомство с профстандартом менеджера по информационным технологиям. Попытка понять насколько формализованы требования и что должен уметь работник претендующий на это высокое звание.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Наше государство не оставляет заботой такую важную сферу как трудовые отношения. И уже как пару лет достаточно активно внедряет такую штукку как профессиональные стандарты. В том числе и для ИТ специальностей. Конечно для коммерческих организаций это носит рекомендательный характер, но оценить своё собственное сответствие каким-бы то ни было стандартам всегда интересно.&lt;/p&gt;
&lt;p&gt;Должности начальникка отдела ИТ соответствует профстандарт 06.014 Менеджер по информационным технологиям утвержденный в 2014-м году.&lt;/p&gt;
&lt;p&gt;Сам простандарт описывает обобщенные трудовые функции (специализации или наборы требований с различными уровнями квалификации), состоящие из просто трудовых фукнций.  Обобщенные трудовые фунции менеджера по ИТ  представлены следующим списком:
1. Управление ресурсами ИТ
2. Управление сервисами ИТ
3. Управление информационной средой
4. Управление ИТ-инновациями
Причем первая обощенная трудовая функция относится к 6-му уровню квалификации, а каждая последующая на один уровень больше.Начав сначала, видим что для обобщенной трудоввой функции "Управление ресурсами ИТ" требуются следующие трудовые функции:
1. Управление качеством ресурсов ИТ
2. Управление ИТ-инфраструктурой
3. Управление расходами на ИТ
4. Управление изменениями ресурсов ИТ
5. Управление отношениями с поставщиками и потребителями ресурсов ИТ
6. Управление персоналом, обслуживающим ресурсы ИТ
7. Управление информационной безопасностью ресурсов ИТ
Все с 6-м уровнем квалификации. Опять таки начну с первого пункты "Управление качеством ресурсов ИТ".&lt;/p&gt;
&lt;p&gt;Для этой трудовой фукции описаны вот такие характеристики:
Трудовые действия &lt;br&gt;
    Формирование целей, приоритетов и ограничений управления качеством ресурсов ИТ и изменение их по мере изменения внешних условий и внутренних потребностей
    Организация работы персонала и выделение ресурсов для управления качеством ресурсов ИТ
    Контроль качества ресурсов ИТ
    Анализ качества ресурсов ИТ, целей, приоритетов и ограничений управления качеством ресурсов ИТ
Необходимые умения&lt;br&gt;
    Контролировать качество ресурсов ИТ
    Определять соответствие качества ресурсов ИТ потребностям
    Формировать целевое качество ресурсов ИТ и контролировать его достижение
Необходимые знания
    Стандарты и методики оценки качества
    Стандарты и методики оценки качества ресурсов ИТ, управления активами ИТ и конфигурациями ИТ
    Способы определения потребностей в уровне качества ресурсов ИТ
Другие характеристики &lt;br&gt;
    Лидерские качества
    Организаторские и коммуникационные способности&lt;/p&gt;
&lt;p&gt;Нужны знания по стандартам и методикам оцеки качества.
Вот что у меня оказалось под рукой:
&lt;a href="https://studref.com/387524/ekonomika/sertifikatsiya_otsenka_kachestva_informatsionnyh_sistem"&gt;&lt;strong&gt;Статья "Сертификация и оценка качества информационных систем"&lt;/strong&gt;&lt;/a&gt;
В результате освоения данной темы студент должен: знать:&lt;/p&gt;
&lt;p&gt;— базовые документы по обеспечению качества ИС;&lt;/p&gt;
&lt;p&gt;— органы, ведущие сертификацию программных продуктов и систем в налоговой сфере;&lt;/p&gt;
&lt;p&gt;уметь:&lt;/p&gt;
&lt;p&gt;— применять методики оценки качества и надежности ИС; владеть:&lt;/p&gt;
&lt;p&gt;— методами оценки качества и сертификации программных продуктов в налоговой сфере.&lt;/p&gt;
&lt;p&gt;Быстрый рост сложности и размеров современных комплексов программ при одновременном повышении ответственности выполняемых функций резко повысил требования со стороны заказчиков и пользователей к их качеству, надежности функционирования и безопасности применения. В некоторых случаях вообще недопустимы ошибки функционирования ИС при любых искажениях исходных данных, сбоях и частичных отказах аппаратуры и других нештатных ситуациях.&lt;/p&gt;
&lt;p&gt;КАЧЕСТВО И НАДЕЖНОСТЬ ИНФОРМАЦИОННЫХ СИСТЕМ. СТАНДАРТЫ КАЧЕСТВА&lt;/p&gt;
&lt;p&gt;Качество программного обеспечения, работающего в государственных информационных системах, является критически важным фактором, т.к. деятельность многих организаций и в том числе ФНС зависит от правильной обработки информации о налогах и сборах автоматизированными информационными компьютерными системами.&lt;/p&gt;
&lt;p&gt;Прежде чем начать обсуждение вопросов сертификации и качеств информационных систем налоговых органов необходимо ввести ряд определений и объяснить все используемые в дальнейшем термины.&lt;/p&gt;
&lt;p&gt;Качество — это наличие существенных признаков, свойств, особенностей, обличающих один предмет или явление от другого.&lt;/p&gt;
&lt;p&gt;Управление качеством опирается на применение и разработку стандартов, позволяющие подготовить компоненты ИС с новыми, более высокими показателями качества[1].&lt;/p&gt;
&lt;p&gt;В ряде журнальных публикаций, учебников и стандартов большое внимание уделяется современным проблемам и процессам обеспечения качества технической продукции, технологий и услуг. Однако практически отсутствует учебная литература, систематически и достаточно полно отражающая особенности и методы обеспечения качества информационных систем (ИС) и их основной, интеллектуальной части — программных средств (ПС). В учебных программах вузов страны отсутствуют полноценные курсы, посвященные качеству программных средств.&lt;/p&gt;
&lt;p&gt;Можно отметить в этой области важные работы Липаева В.В., Костогрызова А.И. и др. Благодаря усилиям этих людей и ими коллективов возглавляемых, создана стройная теория оценки качества информационных систем, развернуты и успешно действуют сертификационные лаборатории. Также коллективом авторов — Косогрызовым А.И., Безкоровайным М.М., Львовым В.М. создан инструментально-моделирующий комплекс оценки качества функционирования информационных систем (КОК), уникальный программный продукт, не имеющий аналогов как за рубежом, так и в нашей стране.&lt;/p&gt;
&lt;p&gt;Однако ограничения на использования всех видов ресурсов обусловило появление, развитие и применение методов, стандартов и средств автоматизации промышленной программной инженерии, обеспечивающих создание сложных ИС и программных средств с заданными высокими показателями качества при реальных ограничениях на использование ресурсов разработки.&lt;/p&gt;
&lt;p&gt;В связи с этим стратегической задачей в жизненном цикле (ЖЦ) современных информационных систем стало обеспечение требуемого качества программных средств и баз данных[2].&lt;/p&gt;
&lt;p&gt;При обеспечение качества современных информационных систем (ИС) применяются модели, позволяющие оценивать и оптимизировать процессы сбора, хранения и обработки информации. Как правило, сегодня для каждой ИС разрабатываются свои модели, учитывающие целевое назначение и специфику функционирования системы. Существует множество аналитических моделей, позволяющих оценивать отдельные характеристики систем[3].&lt;/p&gt;
&lt;p&gt;Разработанный комплекс моделей положен в основу методической базы сертификационных испытаний ИС[4] и реализован в испытательной лаборатории автоматизированных информационных систем и программного обеспечения (аттестат аккредитации № POCC.RU.0001.22 СП17).&lt;/p&gt;
&lt;p&gt;Повышение эффективности функционирования учреждений невозможно без внедрения современных методов управления, базирующихся на автоматизированных информационных системах. Поскольку программное обеспечение по самой своей природе ненадежно, его тестирование и сопровождение требует постоянных существенных расходов.&lt;/p&gt;
&lt;p&gt;Надежность программного обеспечения хорошо обозначена в классической работе Г. Майерса («Надежность программного обеспечения»)[5]: Несмотря на давность данной работы, более полного пособия по рассматриваемому вопросу авторам не удалось найти:&lt;/p&gt;
&lt;p&gt;— В программном обеспечении имеется ошибка, если оно не выполняет того, что пользователю разумно от него ожидать.&lt;/p&gt;
&lt;p&gt;— Отказ программного обеспечения — это появление в нем ошибки.&lt;/p&gt;
&lt;p&gt;— Надежность программного обеспечения — есть вероятность его работы без отказов в течение определенного периода времени, рассчитанного с учетом стоимости для пользователя каждого отказа.&lt;/p&gt;
&lt;p&gt;Из данных определений можно сделать важные выводы:&lt;/p&gt;
&lt;p&gt;— Надежность программного обеспечения является не только внутренним свойством программы.&lt;/p&gt;
&lt;p&gt;— Надежность программного обеспечения — это функция как самого ПО, так и ожиданий (действий) его пользователей.&lt;/p&gt;
&lt;p&gt;Методы проектирования надежного программного обеспечения можно разбить на следующие группы[6]:&lt;/p&gt;
&lt;p&gt;— предупреждение ошибок, методы позволяющие минимизировать или исключить появление ошибки;&lt;/p&gt;
&lt;p&gt;— обнаружение ошибок, методы направленные на разработку дополнительных функций программного обеспечения, помогающих выявить ошибки;&lt;/p&gt;
&lt;p&gt;— устойчивость к ошибкам, дополнительные функции программного обеспечения, предназначенные для исправления ошибок и их последствий и обеспечивающие функционирование системы при наличии ошибок.&lt;/p&gt;
&lt;p&gt;Важным этапом жизненного цикла программного обеспечения, определяющим качество и надежность системы, является тестирование. Тестирование — процесс выполнения программ с намерением найти ошибки.&lt;/p&gt;
&lt;p&gt;Обычно принято различать:&lt;/p&gt;
&lt;p&gt;— автономное тестирование, контроль отдельного программного модуля отдельно от других модулей системы;&lt;/p&gt;
&lt;p&gt;— тестирование сопряжений, контроль сопряжений (связей) между частями системы (модулями, компонентами, подсистемами);&lt;/p&gt;
&lt;p&gt;— тестирование функций, контроль выполнения системой автоматизируемых функций;&lt;/p&gt;
&lt;p&gt;— комплексное тестирование, проверка соответствия системы требованиям пользователей;&lt;/p&gt;
&lt;p&gt;— тестирование полноты и корректности документации, выполнение программы в строгом соответствии с инструкциями;&lt;/p&gt;
&lt;p&gt;— тестирование конфигураций, проверка каждого конкретного варианта поставки (установки) системы.&lt;/p&gt;
&lt;p&gt;Испытанным средством обеспечения высокой эффективности и качества программных средств являются стандарты, разработанные при участии ведущих компаний отрасли[7]. Стандарты должны устанавливать требования к основным свойствам объекта стандартизации, которые могут быть объективно проверены.&lt;/p&gt;
&lt;p&gt;Метод стандартизации — это способ отбора важнейших показателей, определяющих качественные и количественные характеристики объектов, а также процедуры выбора оптимальных значений этих показателей и приведения их в обязательную форму, удобную для использования.&lt;/p&gt;
&lt;p&gt;Основой регламентирования показателей качества программных средств ранее являлся международный стандарт ISO 9126:1991 (ГОСТ Р ИСО / МЭК 9126-93) «Информационная технология. Оценка программного продукта. Характеристики качества и руководство по их применению».&lt;/p&gt;
&lt;p&gt;Исходными данными и высшим приоритетом при выборе показателей качества в большинстве случаев являются назначение, функции и функциональная пригодность соответствующего программного средства. Достаточно полное и корректное описание этих свойств должно служить базой для определения значений большинства остальных характеристик и атрибутов качества. Процессы выбора и установления метрик и шкал для описания характеристик качества программных средств можно разделить на два этапа:&lt;/p&gt;
&lt;p&gt;— выбор и обоснование набора исходных данных, отражающих общие особенности и этапы жизненного цикла проекта программного средства и его потребителей, каждый из которых влияет на определенные характеристики качества комплекса программ;&lt;/p&gt;
&lt;p&gt;— выбор, установление и утверждение конкретных метрик и шкал измерения характеристик и атрибутов качества проекта для их последующей оценки и сопоставления с требованиями спецификаций в процессе квалификационных испытаний или сертификации на определенных этапах жизненного цикла программного средства.&lt;/p&gt;
&lt;p&gt;На первом этапе необходимо выделить и ранжировать по приоритетам потребителей, которым необходимы определенные показатели качества проекта программного средства с учетом их специализации и профессиональных интересов. Подготовка исходных данных завершается выделением номенклатуры базовых, приоритетных показателей качества, определяющих функциональную пригодность программного средства для определенных потребителей.&lt;/p&gt;
&lt;p&gt;На втором этапе, после фиксирования исходных данных, определяются характеристики для конкретного потребителя.&lt;/p&gt;
&lt;p&gt;Выбранные значения характеристик качества и их атрибутов должны быть предварительно проверены разработчиками на их реализуемость с учетом доступных ресурсов конкретного проекта и при необходимости откорректированы.&lt;/p&gt;
&lt;p&gt;Методологию и стандартизацию оценки характеристик качества готовых программных средств и их компонентов (программного продукта) на различных этапах жизненного цикла определяет международный стандарт ISO 14598, состоящий из шести частей.&lt;/p&gt;
&lt;p&gt;Рекомендуется следующая общая схема процессов оценки характеристик качества программ:&lt;/p&gt;
&lt;p&gt;— установка исходных требований для оценки — определение целей испытаний, идентификация типа метрик программного средства;&lt;/p&gt;
&lt;p&gt;— выделение адекватных показателей и требуемых значений атрибутов качества;&lt;/p&gt;
&lt;p&gt;— отбор метрик качества, выделение критериев для проведения экспертиз и измерений;&lt;/p&gt;
&lt;p&gt;— планирование и проектирование процессов оценки характеристик и атрибутов качества в жизненном цикле программного средства;&lt;/p&gt;
&lt;p&gt;— выполнение измерений для оценки, сравнение результатов с критериями и требованиями, обобщение и оценка результатов.&lt;/p&gt;
&lt;p&gt;Комплексное решение задач обеспечения качества программных средств предполагает разработку и внедрение той или иной системы управления качеством. В мировой практике наибольшее распространение получила система, основанная на международных стандартах серии ISO 9000, включающей десяток с лишним документов, в том числе стандарт, регламентирующий обеспечение качества ПО (ISO 9000/3). Эти стандарты должны служить руководством для ведущих специалистов компаний, разрабатывающих ПО на заказ.&lt;/p&gt;
&lt;p&gt;Существуют достаточно точные определения характеристик качества (ISO 9126-1)[8]:&lt;/p&gt;
&lt;p&gt;Функциональная возможность — способность программного средства обеспечивать решение задач, удовлетворяющих сформулированные потребности заказчиков и пользователей при применении комплекса программ в заданных условиях.&lt;/p&gt;
&lt;p&gt;Функциональная пригодность — набор и описания субхарактеристики и ее атрибутов, определяющие назначение, номенклатуру, основные, необходимые и достаточные функции программного средства, соответствующие техническому заданию и спецификациям требований заказчика или потенциального пользователя.&lt;/p&gt;
&lt;p&gt;Правильность (корректность) — способность программного средства обеспечивать правильные или приемлемые для пользователя результаты и внешние эффекты.&lt;/p&gt;
&lt;p&gt;Способность к взаимодействию — свойство программных средств и их компонентов взаимодействовать с одной или большим числом компонентов внутренней и внешней среды.&lt;/p&gt;
&lt;p&gt;Защищенность — способность компонентов программного средства защищать программы и информацию от любых негативных воздействий.&lt;/p&gt;
&lt;p&gt;Надежность — обеспечение комплексом программ достаточно низкой вероятности отказа в процессе функционирования программного средства в реальном времени.&lt;/p&gt;
&lt;p&gt;Эффективность — свойства программного средства, обеспечивающие требуемую производительность решения функциональных задач, с учетом количества используемых вычислительных ресурсов в установленных условиях.&lt;/p&gt;
&lt;p&gt;Практичность (применимость) — свойства программного средства, обусловливающие сложность его понимания, изучения и использования, а также привлекательность для квалифицированных пользователей при применении в указанных условиях.&lt;/p&gt;
&lt;p&gt;Сопровождаемость — приспособленность программного средства к модификации и изменению конфигурации и функций.&lt;/p&gt;
&lt;p&gt;Мобильность — подготовленность программного средства к переносу из одной аппаратно-операционной среды в другую.&lt;/p&gt;
&lt;p&gt;Задача обеспечения и удостоверения качества сложных ПС сводится к проверкам[9]:&lt;/p&gt;
&lt;p&gt;— технологий и процессов проектирования и разработки информационных систем и программных средств;&lt;/p&gt;
&lt;p&gt;— конечного продукта — программных средств, созданных на базе таких технологий.&lt;/p&gt;
&lt;p&gt;В ФНС РФ качество разработки прикладного ПО обеспечивается[10]:&lt;/p&gt;
&lt;p&gt;— проведением Исполнителем предварительного тестирования прикладного программного обеспечения. Результаты тестовых испытаний разработчика оформляются соответствующим протоколом. В протоколе указывается на чьих программно-технических средствах проводилось тестирование, в какие сроки, дается общая характеристика программно-технической среды, в соответствии с методикой проверки указываются режимы, по которым проводилось тестирование. В случае отклонений от требований ТЗ указывается конкретная причина этих отклонений. По результатам тестирования дается общая оценка проведенных работ и заключение «замечания и ошибки отсутствуют».&lt;/p&gt;
&lt;p&gt;— проведением комплексного тестирования прикладного ПО на программно-технических средствах базовых структурных подразделений. По результатам тестирования оформляется «Протокол о проведении комплексного тестирования программных средств» либо «Акт о прекращении процесса тестирования программных средств»;&lt;/p&gt;
&lt;p&gt;— проведением опытной эксплуатации прикладного программного обеспечения на объектах Генерального Заказчика.&lt;/p&gt;
&lt;p&gt;[1] Богданов Д.В. Стандартизация процессов обеспечения качества программного обеспечения / Д.В. Богданов, В.А. Путилов, В.В. Фильчаков. — Апатиты: КФ ПетрГУ, 1997.
[2] Липаев В.В. О проблемах оценивания качества программных средств / В.В. Ли-паев. — E-mail: bmp@stankin.ru; WWW: http://www.stankin.ru / — СЦ НИТМГТУ «СТАНКИН» Москва 27.09.2001.
[3] Костогрызов А.И. Математические модели для сертификации информационных систем: Электронный ресурс. E-mail: akostogryzov@ipiran.ru.
[4] Костогрызов А.И., Липаев В.В. Сертификация функционирования автоматизированных информационных систем / А.И. Костогрызов, В.В. Липаев,М.: Вооружение. Политика. Конверсия, 1996. — 280 с.
[5] Майерс Г. Надежность программного обеспечения / Г. Майерс — М.: Мир,1980.
[6] Липаев В.В. Надежность программных средств / В.В. Липаев. — М.: СИНТЕГ,1998. с.
[7] Липаев В. Оценка качества программных средств / В. Липаев, г. н. с. ИСПРАН // Сетевой журнал — № 3. — 2002. — http://www.setevoi.ru.
[8] Богословская Н.В. Системы автоматизации разработки программного обеспечения: учеб, пособие / Н.В. Богословская и др. СПб.: СПВУРЭ ПВО, 1996.
[9] Липаев В.В. Сертификация систем качества предприятий, разрабатывающих программные средства для информационных систем, на соответствиестандартам серии iso 9000.
[10] Приказ Федеральной налоговой службы от 31 мая 2007 г. № ММ-3-13/335 «О внесении изменений в приказ ФНС России от 23.01.2006 № САЭ-3-13/31@ О введении в действие Положения по информатизации Федеральной налоговой службы».&lt;/p&gt;</content><category term="Блог"></category><category term="управление"></category><category term="обучение"></category></entry><entry><title>Удаление Metro приложений</title><link href="http://localhost:8000/2019/04/05/remove-metro-applications" rel="alternate"></link><published>2019-04-05T19:33:00+03:00</published><updated>2019-04-05T19:33:00+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2019-04-05:/2019/04/05/remove-metro-applications</id><summary type="html">&lt;p&gt;Удаление всех Metro приложений из Windows10, работа с PowerShell Cmdlet-ами управления пакетами.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Windows 10 поставляется с большим количеством "лишнего" софта который мною не используется, но занимает место, сокращает длительность жизни SSD и вобще мазолит мне глаза. Поэтому, при отсутсвии предварительно подготовленного образа ОС, после установки приходится всю эту муть удалять. Поскольку я давний последователь использования командной строки, то для меня естественно использовать PowerShell.&lt;/p&gt;
&lt;p&gt;Приложения из Магазина, или "Универсальные приложения Windpws" (UWP) поставляются в виде пакетов Appx и  в состав PowerShell уже включен модуль Appx с командлетами для работы с ними. Описание и перечень можно посмотреть &lt;a href="https://technet.microsoft.com/ru-ru/library/dn448373.aspx"&gt;здесь&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Cmdlet&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Add-AppxPackage&lt;/td&gt;
&lt;td align="left"&gt;Adds a signed app package to a user account.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Add-AppxVolume&lt;/td&gt;
&lt;td align="left"&gt;Adds an appx volume to the Package Manager.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dismount-AppxVolume&lt;/td&gt;
&lt;td align="left"&gt;Dismounts an appx volume.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Get-AppxDefaultVolume&lt;/td&gt;
&lt;td align="left"&gt;Gets the default appx volume.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Get-AppxLastError&lt;/td&gt;
&lt;td align="left"&gt;Get the last error reported in the app package installation logs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Get-AppxLog&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Get-AppxPackage&lt;/td&gt;
&lt;td align="left"&gt;Gets a list of the app packages that are installed in a user profile.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Get-AppxPackageManifest&lt;/td&gt;
&lt;td align="left"&gt;Gets the manifest of an app package.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Get-AppxVolume&lt;/td&gt;
&lt;td align="left"&gt;Gets appx volumes for the computer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Mount-AppxVolume&lt;/td&gt;
&lt;td align="left"&gt;Mounts an appx volume.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Move-AppxPackage&lt;/td&gt;
&lt;td align="left"&gt;Moves a package from its current location to another appx volume.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Remove-AppxPackage&lt;/td&gt;
&lt;td align="left"&gt;Removes an app package from a user account.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Remove-AppxVolume&lt;/td&gt;
&lt;td align="left"&gt;Removes an appx volume.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Set-AppxDefaultVolume&lt;/td&gt;
&lt;td align="left"&gt;Specifies a default appx volume.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Для решения текущей задачи мы будем использовать не все из них.
1. Получить список приложений UWP в системе можно командлетом&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Get-AppxPackage&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;У этого командлета имеются параметры позволяющие указать интересующую область - Все пользователи, Какой-то определенный пользователь системы или текущий пользователь, -AllUsers; -User test_name; Без параметров, соответсвенно.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Получив список пакетов, можем вручную удалять каждый по его имени в свойсте FullPackageName объекта.
&lt;img alt="Вывод Get-AppxPackage" src="http://localhost:8000/2019/04/05/remove-metro-applications/2018-05-20_18-22-13.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Remove-AppxPackage Microsoft.Windows.ShellExperienceHost_10.0.16299.402_neutral_neutral_cw5n1h2txyewy
Но это ужасно неудобно вручную делать, только если нужно удалить конкретный пакет.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;В моём же случае нужно снести сразу все для всех пользователей и не мучаться, поэтому используею конвейер:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Get-AppxPackage -AllUsers | Remove-AppxPackage&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Чтобы один раз выполнить настройку и для каждого нового пользвоателя на машине не удалять приложения, удаляем из профиля по-умолчанию:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Get-AppXProvisionedPackage -online | Remove-AppxProvisionedPackage -online&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Если же стоит задача подготовить установочный образ и он смонтирован на жестком диске, то помогут командлеты
&lt;code&gt;NaNundefinedGet-AppXProvisionedPackage –Path D:\OfflineImage | Remove-AppxProvisionedPackage –Path d:\OfflineImage&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Блог"></category><category term="powershell"></category><category term="windows10"></category></entry><entry><title>Первый пост</title><link href="http://localhost:8000/2019/03/14/01first-post" rel="alternate"></link><published>2019-03-14T19:30:00+03:00</published><updated>2019-03-14T19:30:00+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2019-03-14:/2019/03/14/01first-post</id><content type="html">&lt;h1&gt;Наконец-то!&lt;/h1&gt;
&lt;p&gt;Почти два года пробуя различные системы, подходы и в несколько подходов формил наконец-то что-то рабочее изготовил.
 Будем продолжать.&lt;/p&gt;</content><category term="Блог"></category></entry><entry><title>Проверка SSD на ошибки</title><link href="http://localhost:8000/2019/03/09/proverka-ssd" rel="alternate"></link><published>2019-03-09T16:10:00+03:00</published><updated>2019-03-09T16:10:00+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2019-03-09:/2019/03/09/proverka-ssd</id><summary type="html">&lt;p&gt;Как в Windows проверить SSD на ошибки, состояние диска и атрибуты SMART&lt;/p&gt;</summary><content type="html">&lt;p&gt;Проверка SSD на ошибки — не то же самое, что аналогичные тесты обычных жестких дисков и многие привычные вам средства здесь по большей части не подойдут в связи с особенностями работы твердотельных накопителей.&lt;/p&gt;
&lt;p&gt;В этой инструкции подробно о том, как проверить SSD на ошибки, узнать его состояние с помощью технологии самодиагностики S.M.A.R.T., а также о некоторых нюансах выхода диска из строя, которые могут быть полезны.&lt;/p&gt;
&lt;h1&gt;Встроенные средства проверки дисков Windows 10, 8.1 и Windows 7&lt;/h1&gt;
&lt;p&gt;Для начала о тех средствах проверки и диагностики дисков Windows, которые применимы к SSD. В первую очередь речь пойдет о CHKDSK. Многие используют эту утилиту для проверки обычных жестких дисков, но насколько она применима к SSD?&lt;/p&gt;
&lt;p&gt;В некоторых случаях, когда речь идет о возможных проблемах с работой файловой системы: странное поведение при действиях с папками и файлами, «файловая система» RAW вместо ранее рабочего раздела SSD, вполне можно использовать chkdsk и это может быть эффективным. Путь, для тех, кто не знаком с утилитой, будет следующим:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Запустите командную строку от имени администратора.&lt;/li&gt;
&lt;li&gt;Введите команду chkdsk C: /f и нажмите Enter.&lt;/li&gt;
&lt;li&gt;В команде выше букву диска (в примере — C) можно заменить на другую.&lt;/li&gt;
&lt;li&gt;После проверки вы получите отчет о найденных и исправленных ошибках файловой системы.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;В чем особенность проверки SSD по сравнению с HDD? В том, что поиск поврежденных секторов с помощью дополнительного параметра, как в команде chkdsk C: /f /r производить не нужно и бессмысленно: этим занимается контроллер SSD, он же переназначает сектора. Аналогично, не следует «искать и исправлять бэд-блоки на SSD» с помощью утилит наподобие Victoria HDD.&lt;/p&gt;
&lt;p&gt;Также в Windows предусмотрен простой инструмент для проверки состояния диска (в том числе SSD) на основании данных самодиагностики SMART: запустите командную строку и введите команду wmic diskdrive get status&lt;/p&gt;
&lt;p&gt;&lt;img alt="get-status" src="http://localhost:8000/2019/03/09/proverka-ssd/wmic-diskdrive-get-status-ssd.png"&gt;&lt;/p&gt;
&lt;p&gt;В результате её выполнения вы получите сообщение о статусе всех подключенных дисков. Если по мнению Windows (которое она формирует на основании данных SMART) всё в порядке, для каждого диска будет указано «Ок».&lt;/p&gt;
&lt;h1&gt;Программы проверки SSD дисков на ошибки и анализа их состояния&lt;/h1&gt;
&lt;p&gt;Проверка ошибок и состояния SSD накопителей производится на основании данных самодиагностики S.M.A.R.T. (Self-Monitoring, Analysis, and Reporting Technology, изначально технология появилась для HDD, где применяется и сейчас). Суть в том, что контроллер диска сам записывает данные о состоянии, произошедших ошибках и другую служебную информацию, которая может служить для проверки SSD.&lt;/p&gt;
&lt;p&gt;Есть множество бесплатных программ для чтения атрибутов SMART, однако начинающий пользователь может столкнуться с некоторыми проблемами при попытке разобраться, что значит каждый из атрибутов, а также с некоторыми другими:&lt;/p&gt;
&lt;p&gt;Разные производители могут использовать разные атрибуты SMART. Часть из которых попросту не определена для SSD других производителей.
Несмотря на то, что вы можете ознакомиться со списком и объяснениями «основных» атрибутов S.M.A.R.T. в различных источниках, например на Википедии: https://ru.wikipedia.org/wiki/S.M.A.R.T, однако и эти атрибуты по-разному записываются и по-разному интерпретируются различными производителями: для одного большое число ошибок в определенном разделе может означать проблемы с SSD, для другого — это просто особенность того, какие именно данные туда записываются.
Следствием предыдущего пункта является то, что некоторые «универсальные» программы для анализа состояния дисков, особенно давно не обновлявшиеся или предназначенные в первую очередь для HDD, могут неверно уведомлять вас о состоянии SSD. Например, очень легко получить предупреждения о несуществующих проблемах в таких программах как Acronis Drive Monitor или HDDScan.
Самостоятельное чтение атрибутов S.M.A.R.T. без знания спецификаций производителя редко может позволить обычному пользователю составить правильную картину о состоянии его SSD, а потому здесь используются сторонние программы, которые можно разделить на две простые категории:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CrystalDiskInfo&lt;/strong&gt; — самая популярная универсальная утилита, постоянно обновляющаяся и адекватно интерпретирующая атрибуты SMART большинства популярных SSD с учетом информации производителей.
&lt;strong&gt;Программы для SSD от производителей&lt;/strong&gt; — по определению знают все нюансы содержимого атрибутов SMART твердотельного накопителя конкретного производителя и умеют правильно сообщить о состоянии диска.&lt;/p&gt;
&lt;p&gt;Если вы — рядовой пользователь, которому требуется просто получить сведения о том, какой ресурс SSD остался, в хорошем ли он состоянии, а при необходимости и автоматически произвести оптимизацию его работы — я рекомендую обратить внимание именно на утилиты производителей, которые всегда можно скачать бесплатно с их официальных сайтов (обычно — первый результат в поиске по запросу с названием утилиты).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Samsung Magician&lt;/strong&gt; — для SSD Samsung, показывает состояние диска на основании данных SMART, количество записанных данных TBW, позволяет просмотреть атрибуты напрямую, выполнить настройки диска и системы, обновить его прошивку.
&lt;strong&gt;Intel SSD Toolbox&lt;/strong&gt; — позволяет произвести диагностику SSD от Intel, просмотреть данные о состоянии и произвести оптимизацию. Отображение атрибутов SMART доступно и для дисков других производителей. Утилита Intel SSD Toolbox
&lt;strong&gt;Kingston SSD Manager&lt;/strong&gt; — сведения о техническом состоянии SSD, оставшийся ресурс по разным параметрам в процентах. Kingston SSD Manager
&lt;strong&gt;Crucial Storage Executive&lt;/strong&gt; — оценивает состояние как для SSD Crucial, так и других производителей. Дополнительные возможности доступны только для фирменных накопителей. Утилита для SSD Crucial Storage Executive
&lt;strong&gt;Toshiba / OCZ SSD Utility&lt;/strong&gt; — проверка состояния, настройка и обслуживание. Отображает только фирменные накопители.
&lt;strong&gt;ADATA SSD Toolbox&lt;/strong&gt; — отображает все диски, но точные данные о состоянии, в том числе оставшемся сроке службы, количестве записанных данных, проверить диск, выполнить оптимизацию системы для работы с SSD. Программа ADATA SSD Toolbox
&lt;strong&gt;WD SSD Dashboard&lt;/strong&gt; — для дисков Western Digital.
&lt;strong&gt;SanDisk SSD Dashboard&lt;/strong&gt; — аналогичная утилита для дисков&lt;/p&gt;
&lt;p&gt;В большинстве случаев указанных утилит оказывается достаточно, однако, если ваш производитель не позаботился о создании утилиты проверки SSD или есть желание вручную разобраться с атрибутами SMART, ваш выбор — CrystalDiskInfo. Однако существуют и более простые утилиты, позволяющие, к примеру, получить информацию об ожидаемом сроке службы SSD диска, например, &lt;a href="https://ssd-life.ru/"&gt;SSDLife&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Как пользоваться CrystalDiskInfo&lt;/h1&gt;
&lt;p&gt;Скачать CrystalDiskInfo можно с официального сайта разработчика https://crystalmark.info/en/software/crystaldiskinfo/ — несмотря на то, что установщик на английском (доступна и portable версия в ZIP-архиве), сама программа будет на русском языке (если он не включится сам, измените язык на русский в пункте меню Language). В этом же меню вы можете включить отображение названий атрибутов SMART на английском (как они указаны в большинстве источников), оставив интерфейс программы русскоязычным.&lt;/p&gt;
&lt;p&gt;&lt;img alt="crystaldiskinfo" src="http://localhost:8000/2019/03/09/proverka-ssd/crystaldiskinfo-smart-main.png"&gt;&lt;/p&gt;
&lt;p&gt;Информация SMART в CrystalDiskInfo
Что дальше? Дальше вы можете ознакомиться с тем, как программа оценивает состояние вашего SSD (если их несколько — переключение в верхней панели CrystalDiskInfo) и заняться чтением атрибутов SMART, каждый из которых, помимо названия, имеет три столбца с данными:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Текущее (Current)&lt;/strong&gt; — текущее значение атрибута SMART на SSD, обычно указывается в процентах оставшегося ресурса, но не для всех параметров (например, температура указывается иначе, с атрибутами ошибок ECC та же ситуация — кстати, не паникуйте, если какой-то программе не понравится что-то связанное с ECC, часто дело в неверной интерпретации данных).
&lt;strong&gt;Наихудшее (Worst)&lt;/strong&gt; — худшее зарегистрированное для выбранного SSD значение по текущему параметру. Обычно совпадает с текущим.
&lt;strong&gt;Порог (Threshold)&lt;/strong&gt; — порог в десятичной системе счисления, при достижении которого состояние диска должно начать вызывать сомнения. Значение 0 обычно говорит об отсутствии такого порога.
&lt;strong&gt;RAW-значения (RAW values)&lt;/strong&gt; — данные, накопившиеся по выбранному атрибуту, по умолчанию отображаются в шестнадцатеричной системе счисления, но можно включить десятичную в меню «Сервис» — «Дополнительно» — «RAW-значения». По ним и спецификациям производителя (каждый может по-разному записывать эти данные) вычисляются значения для столбцов «Текущее» и «Наихудшее». Включение десятичного отображения для RAW в CrystalDiskInfo&lt;/p&gt;
&lt;p&gt;&lt;img alt="crystaldiskinfo-decimal" src="http://localhost:8000/2019/03/09/proverka-ssd/crystaldiskinfo-decimal-raw-values.png"&gt;&lt;/p&gt;
&lt;p&gt;А вот интерпретация каждого из параметров может быть разной для разных SSD, среди основных, которые доступны на разных накопителях и легко читаются в процентах (но в RAW-значениях могут иметь разные данные) можно выделить:
&lt;strong&gt;Reallocated Sector Count&lt;/strong&gt; — количество переназначенных блоков, тех самых «бэд-блоков», о которых шла речь в начале статьи.
&lt;strong&gt;Power-on Hours&lt;/strong&gt; — время наработки SSD в часах (в RAW-значениях, приведенных к десятичному формату, обычно указываются именно часы, но не обязательно).
&lt;strong&gt;Used Reserved Block Count&lt;/strong&gt; — количество использованных резервных блоков для переназначения.
&lt;strong&gt;Wear Leveling Count&lt;/strong&gt; — процент износа ячеек памяти, обычно считается на основании количества циклов записи, но не у всех марок SSD.
&lt;strong&gt;Total LBAs Written, Lifetime Writes&lt;/strong&gt; — количество записанных данных (в RAW значениях могут блоки LBA, байты, гигабайты).
&lt;strong&gt;CRC Error Count&lt;/strong&gt; — выделю этот пункт среди прочих, потому как при нулях в других атрибутах подсчета разных типов ошибок, этот может содержать какие-либо значения. Обычно, всё в порядке: эти ошибки могут накапливаться при внезапных отключениях питания и сбоях ОС. Однако, если число растет само по себе, проверьте, чтобы ваш SSD был хорошо подключен (не окисленные контакты, плотное подключение, исправный кабель).&lt;/p&gt;
&lt;p&gt;Если какой-то атрибут не ясен, отсутствует в Википедии (ссылку приводил выше), попробуйте просто выполнить поиск по его названию в Интернете: вероятнее всего, его описание будет найдено.&lt;/p&gt;
&lt;p&gt;В заключение одна рекомендация: при использовании SSD для хранения важных данных, всегда имейте их резервную копию где-либо ещё — в облаке, на обычном жестком диске, оптических дисках. К сожалению, с твердотельными накопителями актуальна проблема внезапного полного выхода из строя без каких-либо предварительных симптомов, это нужно учитывать.&lt;/p&gt;</content><category term="Блог"></category><category term="windows"></category></entry><entry><title>Отключение адаптивной смены яркости в Windows 10</title><link href="http://localhost:8000/2017/11/12/managing-adaptive-blacklight-windows-10" rel="alternate"></link><published>2017-11-12T14:32:00+03:00</published><updated>2017-11-12T14:32:00+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2017-11-12:/2017/11/12/managing-adaptive-blacklight-windows-10</id><summary type="html">&lt;p&gt;Описание борьбы с автоматической сменой яркости подстветки экрана на Windows 10.&lt;/p&gt;</summary><content type="html">&lt;!-- ![Cover]({attach}1.%20Windows-10-Wallpaper.png) --&gt;

&lt;p&gt;Долгое время не мог понять, что же меня раздражает при активной работе на ноутбуке сWindows 10. Оказалось, что при изменении картинки на экране,  например при смене вкладки браузера со светлой страницы Яндекса на странцу с видео YouTube, происходило адаптивное изменение яркости подсветки экрана. Очень раздражающая штука.&lt;/p&gt;
&lt;p&gt;Легко отключить это не получилось, в настройках электропитания уже была отключена.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Settings" src="http://localhost:8000/2017/11/12/managing-adaptive-blacklight-windows-10/2. 2017-11-12_12-52-59.png"&gt;&lt;/p&gt;
&lt;p&gt;Поэтому пришлось лезть глубже. Оказалось, что проблема известная и связана сдрайверами видеоадптеров. В частности в моем случае пришлось для интегрированной видеокарты изменить драйвер на стандартный от Microsoft, потому что обновление драйвера от ATI не принесло результата.&lt;/p&gt;
&lt;p&gt;Делается это в диспетчере устройств. Правой клавишей на видеоадаптере, из контекстного меню выбираем пункт "Обновить драйвер..." &amp;gt;  "Выполнить поиск драйверов на этом компьютере" &amp;gt; "Выбрать драйвер из списка доступных драйверов на этом компьютере". Откроется окно выбора драйвера,  в котором выбираем "Базовый видеоадаптер (Microsoft)".&lt;/p&gt;
&lt;p&gt;&lt;img alt="Driver" src="http://localhost:8000/2017/11/12/managing-adaptive-blacklight-windows-10/3. 2017-11-12_13-09-26.png"&gt;&lt;/p&gt;
&lt;p&gt;Во время установки драйвера экран будет выключаться на несколько секунд. В моем случае раздражающая адаптивная регулировка яркости подсветка отключилась сразу и перезагрузка не понадобилась.&lt;/p&gt;</content><category term="Блог"></category><category term="windows10"></category></entry><entry><title>Администратор заблокировал выполнение этого приложения</title><link href="http://localhost:8000/2017/11/04/ormirovanie-html-iz-powershell-koda-v-ise" rel="alternate"></link><published>2017-11-04T07:05:00+03:00</published><updated>2017-11-04T07:05:00+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2017-11-04:/2017/11/04/ormirovanie-html-iz-powershell-koda-v-ise</id><summary type="html">&lt;!-- ![Cover]({attach}cover.png) --&gt;

&lt;p&gt;Система защиты Windows при всей неоднозначной неэффективности в то же время достаточно сложна и эшелонирована. Так элементы обеспечения безопасности Defender и UAC, который кстати раньше обозначался как  Limited User Account (LUA), способны работать в связке. Приводя к блокировке потенциально опасных для системы приложений. Вот и я столкнулся с этим, при …&lt;/p&gt;</summary><content type="html">&lt;!-- ![Cover]({attach}cover.png) --&gt;

&lt;p&gt;Система защиты Windows при всей неоднозначной неэффективности в то же время достаточно сложна и эшелонирована. Так элементы обеспечения безопасности Defender и UAC, который кстати раньше обозначался как  Limited User Account (LUA), способны работать в связке. Приводя к блокировке потенциально опасных для системы приложений. Вот и я столкнулся с этим, при том что и UAC и Defender я старательно отключил, приложение было блокировано из-за сертификата издателю которого система не доверяет. При этом использование функции "Запуск от имени администратора" привело к повторному появлению указанного окна.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Runas" src="http://localhost:8000/2017/11/04/ormirovanie-html-iz-powershell-koda-v-ise/2017-11-04_16-47-13.png"&gt;&lt;/p&gt;
&lt;p&gt;Удалось запустить исполняемый файл из командной консоли, которая в свою очередь и была запущена от имени Администратора. Но это не очень удобно. Ниже представлен Powershell скрипт вносящий изменения в ветку реестра&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\ System\EnableLUA&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;для отключения функционала ограниченного пользовательского аккаунта (LUA). Естественно при отключении еще одного средства защиты система становится ещё более подверженной вторжению.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="err"&gt;Отключает LUA&lt;/span&gt;
&lt;span class="err"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;$RegPath = &amp;quot;HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;$RegProperty = &amp;quot;EnableLUA&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;Set-ItemProperty -path $RegPath -Name $RegProperty -value &amp;quot;0&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="err"&gt;Включает LUA&lt;/span&gt;
&lt;span class="err"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;$RegPath = &amp;quot;HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;$RegProperty = &amp;quot;EnableLUA&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;Set-ItemProperty -path $RegPath -Name $RegProperty -value &amp;quot;1&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Блог"></category><category term="windows10"></category><category term="powershell"></category></entry><entry><title>Удаление службы с помощью Powershell</title><link href="http://localhost:8000/2017/11/04/remove-service-with-powershell" rel="alternate"></link><published>2017-11-04T04:47:00+03:00</published><updated>2017-11-04T04:47:00+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2017-11-04:/2017/11/04/remove-service-with-powershell</id><summary type="html">&lt;p&gt;&lt;img alt="Cover" src="http://localhost:8000/2017/11/04/remove-service-with-powershell/powershell_5_dsc.png"&gt;
Подхватил недавно Adware которые насоздавал кучу лишних служб, таких как updater.mail.ru. Конечно, в состав Windows 10 входит отличная утилита SC с помощью которой их легко можно удалить:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sc delete updater.mail.ru.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Но удивил тот факт что в составе Powershell есть командлеты для создания, настройки и управления службами …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Cover" src="http://localhost:8000/2017/11/04/remove-service-with-powershell/powershell_5_dsc.png"&gt;
Подхватил недавно Adware которые насоздавал кучу лишних служб, таких как updater.mail.ru. Конечно, в состав Windows 10 входит отличная утилита SC с помощью которой их легко можно удалить:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sc delete updater.mail.ru.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Но удивил тот факт что в составе Powershell есть командлеты для создания, настройки и управления службами, но вот для удаления нет.  Есть костыли использующие WMI&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Get-WmiObject win32_service -Filter ″name&lt;span class="o"&gt;=&lt;/span&gt;′updater.mail.ru′″&lt;span class="o"&gt;)&lt;/span&gt;.delete&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;или прямое удаление ветки реестра относящийся к службе в разделе:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HKLM:\SYSTEM\CurrentControlSet\Services\&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;но вот командлета нет. Искал на powershelgallery.com и в стандартной поставке. Отличный пример когда соберусь изучать создание командлетов. наверняка это из-за каких-подводных камней. хотя конечно можно просто обёртку для sc.exe написать, что совсем не интересно.&lt;/p&gt;</content><category term="Блог"></category></entry><entry><title>Дата-центр Xelent представил решения для майнинга</title><link href="http://localhost:8000/2017/09/20/xelent" rel="alternate"></link><published>2017-09-20T03:15:00+03:00</published><updated>2017-09-20T03:15:00+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2017-09-20:/2017/09/20/xelent</id><summary type="html">&lt;p&gt;Дата-центр Xelent предлагает майнерам услугу Infrastructure-as-a-Service.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="xelent.jpg"&gt;&lt;img alt="Машинный зал Xelent" height="212" src="http://localhost:8000/2017/09/20/xelent/xelent.jpg" width="320"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Петербургский дата-центр Xelent запустил услугу аренды мест в серверных стойках для размещения майнинговых ферм. Компания также представила собственную разработку – универсальный корпус Xelent Rig для установки майнинговых ферм в стандартные 19'' серверные стойки. Несколько крупных промышленных проектов майнинга уже разместили свое оборудование в дата-центре. На сегодняшний день объем размещенных мощностей уже исчисляется десятками стоек. При этом инфраструктура ЦОД готова к приему нескольких сотен стоек от клиентов, специализирующихся на майнинге.  &lt;/p&gt;
&lt;p&gt;Благодаря привлекательной цене за электроэнергию, которая составит 5 рублей за кВт в час, услугой могут воспользоваться как крупные компании, так и частные майнеры.  &lt;/p&gt;
&lt;p&gt;Для размещения и обслуживания оборудования для майнинга в дата-центре разработали Xelent Rig – универсальный корпус, который позволяет размещать оборудование для различных типов и потребляемой мощности. Xelent Rig, с одной стороны, позволяет компактно расположить все компоненты фермы, и, с другой, обеспечивает размещение устройства в четырех юнитах стандартной серверной стойки. Для майнеров становятся доступными все преимущества размещения в дата-центре уровня Tier III: бесперебойное питание чистой электроэнергией, охлаждение и поддержание нужного температурного режима, фильтрация и увлажнение воздуха, а также многоуровневый режим безопасности и постоянный доступ в интернет.  &lt;/p&gt;
&lt;p&gt;«Майнинг превращается в успешный бизнес – помимо «кустарных» майнеров появляется все больше тех, кто занимается майнингом в промышленных объемах, и мы видим для себя возможности для роста, по крайней мере, на ближайшие 2-3 года, – комментирует Сергей Ключников, эксперт проекта «Майнинг» дата-центра Xelent. – Новое решение – логичное продолжение услуги colocation (размещения своего сервера в дата-центре хостинг-провайдера). Мы планируем и дальше развивать это направление, подключая услуги облачного майнинга и аренды оборудования в дальнейшем».  &lt;/p&gt;
&lt;p&gt;Терминологическая справка:&lt;br&gt;
- Блокчейн – технология распределенных реестров, которая позволяет создать децентрализованную систему хранения информации.&lt;br&gt;
- Криптовалюта – электронное платежное средство, защищенное шифрованием. Учет криптовалют децентрализован.&lt;br&gt;
- Майнинг – получение криптовалют путем предоставления собственных вычислительных мощностей для проведения и проверки какой-либо транзакции криптовалюты.  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.it-weekly.ru/news-company/new-products/133996.html?bx_sender_conversion_id=441550&amp;amp;utm_sending=email"&gt;Источник&lt;/a&gt;&lt;/p&gt;</content><category term="Новости"></category></entry><entry><title>Как изменить формат по-умолчанию для сохранения документов Word, Excel и PowerPoint 2016</title><link href="http://localhost:8000/2016/01/22/word-excel-powerpoint-2016" rel="alternate"></link><published>2016-01-22T10:37:00+03:00</published><updated>2016-01-22T10:37:00+03:00</updated><author><name>Стороженко Евгений Владимирович</name></author><id>tag:localhost,2016-01-22:/2016/01/22/word-excel-powerpoint-2016</id><summary type="html">&lt;p&gt;Если Вы используете Word, Excel или PowerPoint 2016  и часто Вам часто приходиться передавать создаваемые файлы людям использующим старые версии офисного пакета от Microsoft или пакеты OpenOffice/LibreOffice, то может надоесть каждый раз выбирать опцию сохранения файла в одном нужных форматов.  В этой заметке описано как изменить формат файлов по-умолчанию в диалоге сохранения.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="1.png"&gt;&lt;img alt="Первая" height="195" src="http://localhost:8000/2016/01/22/word-excel-powerpoint-2016/1.png" width="320"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[Для демонстрации действий которые нужно выполнить я буду использовать Excel 2016, но для Word и PowerPoint 2016 действия будут абсолютно точно такие же.]&lt;/p&gt;
&lt;p&gt;Для изменения настроек откройте приложение Office создав файл или открыв существующий. Теперь щёлкаем по кнопке меню "Файл".&lt;/p&gt;
&lt;p&gt;&lt;a href="2.png"&gt;&lt;img alt="Вторая" height="195" src="http://localhost:8000/2016/01/22/word-excel-powerpoint-2016/2.png" width="320"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;В открывшемся меню выбираем пункт "Параметры".&lt;/p&gt;
&lt;p&gt;&lt;a href="3.png"&gt;&lt;img alt="Третья" height="195" src="http://localhost:8000/2016/01/22/word-excel-powerpoint-2016/3.png" width="320"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;В открывшемся диалоговом окне "Параметры Excel" щелкаем по пункту вертикального меню "Сохранение" в левой части окна.&lt;/p&gt;
&lt;p&gt;&lt;a href="4.png"&gt;&lt;img alt="Четвертая" height="195" src="http://localhost:8000/2016/01/22/word-excel-powerpoint-2016/4.png" width="320"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[В разделе "Сохранение книг" справа выберите нужный формат в выпадающем списке "Сохранять файлы в следующем формате:". В приведенном примера на снимке экрана видно, что вариантов, помимо выбранного "Книга Excel 97-2003", действительно огромное количество. В том числе и "Электронная таблица Open Document" с которым работаю свободные офисные пакеты OpenOffice/LibreOffice.]&lt;/p&gt;
&lt;p&gt;&lt;a href="5.png"&gt;&lt;img alt="Пятая" height="180" src="http://localhost:8000/2016/01/22/word-excel-powerpoint-2016/5.png" width="320"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ОБРАТИТЕ ВНИМАНИЕ: В диалоговом окне сохранения файла выбранный формат будет отображаться по-умолчанию только для новых файлов. Если нужно сохранить существующий документ Word, Excel или PowerPoint в другом формате, то Вам всё еще нужно будет указывать нужный формат в диалоге "Сохранить как".&lt;/p&gt;</content><category term="Блог"></category><category term="windows"></category><category term="office"></category></entry></feed>