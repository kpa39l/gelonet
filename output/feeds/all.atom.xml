<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Стороженко Евгений Владимирович</title><link href="http://localhost:8000/" rel="alternate"></link><link href="http://localhost:8000/feeds/all.atom.xml" rel="self"></link><id>http://localhost:8000/</id><updated>2017-09-20T03:15:00+03:00</updated><subtitle>Субьективное ИТ в малом городе</subtitle><entry><title>Дата-центр Xelent представил решения для майнинга</title><link href="http://localhost:8000/xelent.html" rel="alternate"></link><published>2017-09-20T03:15:00+03:00</published><updated>2017-09-20T03:15:00+03:00</updated><author><name>Kpa39l</name></author><id>tag:localhost,2017-09-20:/xelent.html</id><summary type="html">&lt;p&gt;&lt;a href="./xelent.jpg"&gt;&lt;img alt="" height="212" src="./xelent.jpg" width="320"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Петербургский дата-центр Xelent запустил услугу аренды мест в серверных стойках для размещения майнинговых ферм. Компания также представила собственную разработку – универсальный корпус Xelent Rig для установки майнинговых ферм в стандартные 19'' серверные стойки. Несколько крупных промышленных проектов майнинга уже разместили свое оборудование в дата-центре. На сегодняшний день объем размещенных мощностей уже …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="./xelent.jpg"&gt;&lt;img alt="" height="212" src="./xelent.jpg" width="320"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Петербургский дата-центр Xelent запустил услугу аренды мест в серверных стойках для размещения майнинговых ферм. Компания также представила собственную разработку – универсальный корпус Xelent Rig для установки майнинговых ферм в стандартные 19'' серверные стойки. Несколько крупных промышленных проектов майнинга уже разместили свое оборудование в дата-центре. На сегодняшний день объем размещенных мощностей уже исчисляется десятками стоек. При этом инфраструктура ЦОД готова к приему нескольких сотен стоек от клиентов, специализирующихся на майнинге.  &lt;/p&gt;
&lt;p&gt;Благодаря привлекательной цене за электроэнергию, которая составит 5 рублей за кВт в час, услугой могут воспользоваться как крупные компании, так и частные майнеры.  &lt;/p&gt;
&lt;p&gt;Для размещения и обслуживания оборудования для майнинга в дата-центре разработали Xelent Rig – универсальный корпус, который позволяет размещать оборудование для различных типов и потребляемой мощности. Xelent Rig, с одной стороны, позволяет компактно расположить все компоненты фермы, и, с другой, обеспечивает размещение устройства в четырех юнитах стандартной серверной стойки. Для майнеров становятся доступными все преимущества размещения в дата-центре уровня Tier III: бесперебойное питание чистой электроэнергией, охлаждение и поддержание нужного температурного режима, фильтрация и увлажнение воздуха, а также многоуровневый режим безопасности и постоянный доступ в интернет.  &lt;/p&gt;
&lt;p&gt;«Майнинг превращается в успешный бизнес – помимо «кустарных» майнеров появляется все больше тех, кто занимается майнингом в промышленных объемах, и мы видим для себя возможности для роста, по крайней мере, на ближайшие 2-3 года, – комментирует Сергей Ключников, эксперт проекта «Майнинг» дата-центра Xelent. – Новое решение – логичное продолжение услуги colocation (размещения своего сервера в дата-центре хостинг-провайдера). Мы планируем и дальше развивать это направление, подключая услуги облачного майнинга и аренды оборудования в дальнейшем».  &lt;/p&gt;
&lt;p&gt;Терминологическая справка:&lt;br&gt;
- Блокчейн – технология распределенных реестров, которая позволяет создать децентрализованную систему хранения информации.&lt;br&gt;
- Криптовалюта – электронное платежное средство, защищенное шифрованием. Учет криптовалют децентрализован.&lt;br&gt;
- Майнинг – получение криптовалют путем предоставления собственных вычислительных мощностей для проведения и проверки какой-либо транзакции криптовалюты.  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.it-weekly.ru/news-company/new-products/133996.html?bx_sender_conversion_id=441550&amp;amp;utm_sending=email"&gt;Источник&lt;/a&gt;&lt;/p&gt;</content><category term="Блог"></category></entry><entry><title>Как изменить формат по-умолчанию для сохранения документов Word, Excel и PowerPoint 2016</title><link href="http://localhost:8000/word-excel-powerpoint-2016.html" rel="alternate"></link><published>2016-01-22T10:37:00+03:00</published><updated>2016-01-22T10:37:00+03:00</updated><author><name>Kpa39l</name></author><id>tag:localhost,2016-01-22:/word-excel-powerpoint-2016.html</id><summary type="html">&lt;h2&gt;Summary : Если Вы используете Word, Excel или PowerPoint 2016  и часто Вам часто приходиться передавать создаваемые файлы людям использующим старые версии офисного пакета от Microsoft или пакеты OpenOffice/LibreOffice, то может надоесть каждый раз выбирать опцию сохранения файла в одном нужных форматов.  В этой заметке описано как изменить формат файлов …&lt;/h2&gt;</summary><content type="html">&lt;h2&gt;Summary : Если Вы используете Word, Excel или PowerPoint 2016  и часто Вам часто приходиться передавать создаваемые файлы людям использующим старые версии офисного пакета от Microsoft или пакеты OpenOffice/LibreOffice, то может надоесть каждый раз выбирать опцию сохранения файла в одном нужных форматов.  В этой заметке описано как изменить формат файлов по-умолчанию в диалоге сохранения.&lt;/h2&gt;
&lt;p&gt;&lt;a href="1.png"&gt;&lt;img alt="" height="195" src="1.png" width="320"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[Для демонстрации действий которые нужно выполнить я буду использовать Excel 2016, но для Word и PowerPoint 2016 действия будут абсолютно точно такие же.]&lt;/p&gt;
&lt;p&gt;Для изменения настроек откройте приложение Office создав файл или открыв существующий. Теперь щёлкаем по кнопке меню "Файл".&lt;/p&gt;
&lt;p&gt;&lt;a href="http://3.bp.blogspot.com/-i3fDW3Oe-LM/VqJyIVShnUI/AAAAAAAANFw/DtTRhiyLEps/s1600/2016-01-22%2B19-40-42%2B%25D0%25A1%25D0%25BA%25D1%2580%25D0%25B8%25D0%25BD%25D1%2588%25D0%25BE%25D1%2582%2B%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0.png"&gt;&lt;img alt="" height="195" src="http://3.bp.blogspot.com/-i3fDW3Oe-LM/VqJyIVShnUI/AAAAAAAANFw/DtTRhiyLEps/s320/2016-01-22%2B19-40-42%2B%25D0%25A1%25D0%25BA%25D1%2580%25D0%25B8%25D0%25BD%25D1%2588%25D0%25BE%25D1%2582%2B%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0.png" width="320"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;В открывшемся меню выбираем пункт "Параметры".&lt;/p&gt;
&lt;p&gt;&lt;a href="http://4.bp.blogspot.com/-3D5KAj1M44k/VqJyIu7zTrI/AAAAAAAANFo/lOIvWQJ_RHw/s1600/2016-01-22%2B21-07-55%2B%25D0%25A1%25D0%25BA%25D1%2580%25D0%25B8%25D0%25BD%25D1%2588%25D0%25BE%25D1%2582%2B%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0.png"&gt;&lt;img alt="" height="195" src="http://4.bp.blogspot.com/-3D5KAj1M44k/VqJyIu7zTrI/AAAAAAAANFo/lOIvWQJ_RHw/s320/2016-01-22%2B21-07-55%2B%25D0%25A1%25D0%25BA%25D1%2580%25D0%25B8%25D0%25BD%25D1%2588%25D0%25BE%25D1%2582%2B%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0.png" width="320"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;В открывшемся диалоговом окне "Параметры Excel" щелкаем по пункту вертикального меню "Сохранение" в левой части окна.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://2.bp.blogspot.com/-Un_m0zeTLJM/VqJyIgvF8eI/AAAAAAAANFs/HbBS9H-9xdo/s1600/2016-01-22%2B21-08-39%2B%25D0%25A1%25D0%25BA%25D1%2580%25D0%25B8%25D0%25BD%25D1%2588%25D0%25BE%25D1%2582%2B%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0.png"&gt;&lt;img alt="" height="195" src="http://2.bp.blogspot.com/-Un_m0zeTLJM/VqJyIgvF8eI/AAAAAAAANFs/HbBS9H-9xdo/s320/2016-01-22%2B21-08-39%2B%25D0%25A1%25D0%25BA%25D1%2580%25D0%25B8%25D0%25BD%25D1%2588%25D0%25BE%25D1%2582%2B%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0.png" width="320"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[В разделе "Сохранение книг" справа выберите нужный формат в выпадающем списке "Сохранять файлы в следующем формате:". В приведенном примера на снимке экрана видно, что вариантов, помимо выбранного "Книга Excel 97-2003", действительно огромное количество. В том числе и "Электронная таблица Open Document" с которым работаю свободные офисные пакеты OpenOffice/LibreOffice.]&lt;/p&gt;
&lt;p&gt;&lt;a href="http://4.bp.blogspot.com/-dVSQ7F2ZZ4o/VqJyJOrgHJI/AAAAAAAANF4/PlY6EAlLDz8/s1600/2016-01-22%2B21-09-13%2B%25D0%25A1%25D0%25BA%25D1%2580%25D0%25B8%25D0%25BD%25D1%2588%25D0%25BE%25D1%2582%2B%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0.png"&gt;&lt;img alt="" height="180" src="http://4.bp.blogspot.com/-dVSQ7F2ZZ4o/VqJyJOrgHJI/AAAAAAAANF4/PlY6EAlLDz8/s320/2016-01-22%2B21-09-13%2B%25D0%25A1%25D0%25BA%25D1%2580%25D0%25B8%25D0%25BD%25D1%2588%25D0%25BE%25D1%2582%2B%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0.png" width="320"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ОБРАТИТЕ ВНИМАНИЕ: В диалоговом окне сохранения файла выбранный формат будет отображаться по-умолчанию только для новых файлов. Если нужно сохранить существующий документ Word, Excel или PowerPoint в другом формате, то Вам всё еще нужно будет указывать нужный формат в диалоге "Сохранить как".&lt;/p&gt;</content><category term="Блог"></category><category term="Windows"></category><category term="Office"></category></entry><entry><title>Быстрый старт с Pelican</title><link href="http://localhost:8000/pelican-quickstart.html" rel="alternate"></link><published>2015-07-22T08:00:00+03:00</published><updated>2015-07-22T08:00:00+03:00</updated><author><name>Kpa39l</name></author><id>tag:localhost,2015-07-22:/pelican-quickstart.html</id><summary type="html">&lt;!-- Cover: images/flex-screenshot.png --&gt;

&lt;hr&gt;
&lt;h1&gt;Быстрый старт&lt;/h1&gt;
&lt;p&gt;Настоятельно рекомендуем прочитать полную версию документации, но для особо нетерпеливых ниже представлен ряд шагов, чтобы быстро начать работу.&lt;/p&gt;
&lt;h1&gt;Подготовка&lt;/h1&gt;
&lt;p&gt;В системе GNU/Linux Debian Buster по-умолчанию уже устанолен Python 3.7 Установим утилиту для создния виртуального окружения venv.
&lt;code&gt;$ sudo aptitude install python3-venv&lt;/code&gt;
Он включает в свой состав утилиты …&lt;/p&gt;</summary><content type="html">&lt;!-- Cover: images/flex-screenshot.png --&gt;

&lt;hr&gt;
&lt;h1&gt;Быстрый старт&lt;/h1&gt;
&lt;p&gt;Настоятельно рекомендуем прочитать полную версию документации, но для особо нетерпеливых ниже представлен ряд шагов, чтобы быстро начать работу.&lt;/p&gt;
&lt;h1&gt;Подготовка&lt;/h1&gt;
&lt;p&gt;В системе GNU/Linux Debian Buster по-умолчанию уже устанолен Python 3.7 Установим утилиту для создния виртуального окружения venv.
&lt;code&gt;$ sudo aptitude install python3-venv&lt;/code&gt;
Он включает в свой состав утилиты pip для установки пакетов&lt;/p&gt;
&lt;p&gt;Создаем каталог в котором будет работать Pelican:
&lt;code&gt;$ mkdir pelican &amp;amp;&amp;amp; cd pelican&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Создаем внутри каталога виртуальную среду Pytnon &lt;code&gt;$ python3 -m venv pelicanenv&lt;/code&gt; и активируем её командой &lt;code&gt;$ source pelicanenv/bin/activate&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;Установка&lt;/h1&gt;
&lt;p&gt;Устанавливаем Pelican (и дополнительно Markdown) на Python 3.7+, выполнив следующую команду в терминале:
&lt;code&gt;(pelicanenv) $ pip install pelican[Markdown]&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;Создание проекта&lt;/h1&gt;
&lt;p&gt;Выбираем имя для проекта и создаем каталог с соответствующим именем для сайта и переходим в этот каталог:
&lt;code&gt;(pelicanenv) $ mkdir -p ./projects/yoursite.ru
(pelicanenv) $ cd ./projects/yoursite.ru&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Дальше создаем основу для проекта с помощью команды &lt;code&gt;pelican-quickstart&lt;/code&gt;. Эта команда задаст несколько вопросов о создаваемом сайте. На вопрос о URL адресе сайта следует ответить в том же виде как будет отображено в примере http://yoursite.ru&lt;/p&gt;
&lt;h1&gt;Создаем статью&lt;/h1&gt;
&lt;p&gt;Для того чтобы запустить Pelican потребуется создать хотя бы одну статью. Для этого в любом тектосовм редакторе создаем файл со следующим cодержимым:
`Title: Мой Первый Отзыв
Date: 2020-05-04 10:20
Category: Обзор&lt;/p&gt;
&lt;p&gt;Ниже приведен обзор моей любимой механической клавиатуры.`&lt;/p&gt;
&lt;p&gt;Поскольку эта статья для примера рассматривает работу с данными в формате Markdown, то сохранить его нужно как &lt;code&gt;./projects/yoursite.ru/content/keyboard-review.md&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Генерируем сайт&lt;/h1&gt;
&lt;p&gt;В корневом каталоге проекта &lt;code&gt;./projects/yoursite.ru/&lt;/code&gt;выполните pelican-команду для создания сайта:
&lt;code&gt;(pelicanenv) $ pelican content&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;В результате выполенния команды сайт был создан внутри каталога &lt;code&gt;./projects/yoursite.ru/output&lt;/code&gt;. В процесе работы могут отобразиться предупреждения, относящееся к RSS лентам, но это нормально при локальном развертывании и можно пока не обращать на них внимание.&lt;/p&gt;
&lt;h1&gt;Предварительный просмотр сайта&lt;/h1&gt;
&lt;p&gt;Открываем сеанс терминала, перейдим в корневой каталог проекта &lt;code&gt;./projects/yoursite.ru/&lt;/code&gt;и выполняем команду для запуска веб-сервера Pelican:
&lt;code&gt;(pelicanenv) pelican --listen&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Теперь просмотреть сгенерированный сайт можно перейдя на http://localhost:8000/ в браузере.&lt;/p&gt;
&lt;p&gt;Более подробная информация содержится вдокументации, продолжайте изучать её. Так же на странице &lt;a href="https://github.com/getpelican/pelican/wiki/Tutorials"&gt;Tutorials&lt;/a&gt; wiki Pelican приведены ссылки на опубликованные сообществом руководства.&lt;/p&gt;
&lt;h1&gt;Источники&lt;/h1&gt;
&lt;p&gt;https://python-scripts.com/virtualenv
https://docs.getpelican.com/en/stable/quickstart.html&lt;/p&gt;</content><category term="Блог"></category><category term="pelican"></category><category term="doc"></category></entry><entry><title>Настройка редактора</title><link href="http://localhost:8000/set-atom-to-work-with-markdown.html" rel="alternate"></link><published>2015-07-22T08:00:00+03:00</published><updated>2015-07-22T08:00:00+03:00</updated><author><name>Kpa39l</name></author><id>tag:localhost,2015-07-22:/set-atom-to-work-with-markdown.html</id><summary type="html">&lt;!-- Cover: images/flex-screenshot.png --&gt;

&lt;h2&gt;Summary: Настройка редактора Атом для работы со статическими блогами с разметкой на markdown&lt;/h2&gt;
&lt;h1&gt;Настройка редактора Atom для работы с Markdown&lt;/h1&gt;
&lt;p&gt;Для работы над статическим сайтом нужно:
- Редактировать файлы Markdown
- Хранить файлы в "безопасном" месте. Чтобы случайно их не потерять
- Облегчить себе работу по формирофанию необходимой сужебной информации внутри файлов (Front …&lt;/p&gt;</summary><content type="html">&lt;!-- Cover: images/flex-screenshot.png --&gt;

&lt;h2&gt;Summary: Настройка редактора Атом для работы со статическими блогами с разметкой на markdown&lt;/h2&gt;
&lt;h1&gt;Настройка редактора Atom для работы с Markdown&lt;/h1&gt;
&lt;p&gt;Для работы над статическим сайтом нужно:
- Редактировать файлы Markdown
- Хранить файлы в "безопасном" месте. Чтобы случайно их не потерять
- Облегчить себе работу по формирофанию необходимой сужебной информации внутри файлов (Front Matter)&lt;/p&gt;
&lt;p&gt;GitHub поможет решить вопрос хранения файлов со статьями и новостямии, а вот
удобного редактирования и наполнения файлов можно решить практически любым редактором
кода. Для себя я выбрал редактор от авторов GitHub - &lt;a href="https://atom.io" title="Atom"&gt;Atom&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Это современные кросс платформенный редактор кода, с множеством удобным плагинов и, что самое важное, встроенной интеграцией с
Github. Что позволяет собрать функионально рабочее место для работы над блогом буквально
за 15 минут. И не беспокоиться о том, что с таким трудом созданные данные будут утеряны
из-за аппаратного или программного сбоя.&lt;/p&gt;
&lt;p&gt;Поскольку работаю я на GNU/Linux Debian, то и процесс настройки буду описывать для этой операционной
системы.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Скачиваем пакет с сайта &lt;a href="https://atom.io" title="Atom"&gt;Atom&lt;/a&gt;.
&lt;img alt="Главная страница atom.io" src="images/2020/05/screenshot-atom.io-2020.05.03-15_33_48.png"&gt;      &lt;/li&gt;
&lt;li&gt;Устанавливаем зависимости:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;$ sudo aptitude install git, libgconf-2-4, libgtk-3-0, libgcrypt20, libnotify4, libxtst6, libnss3, python, gvfs-bin, xdg-utils, libx11-xcb1, libxss1, libasound2, libxkbfile1, libcurl4, policykit-1, lsb-release&lt;/code&gt;
Первое, что следует сделать после установки Git — указать своё имя и адрес электронной почты. Это важно, потому что каждый коммит в Git содержит эту информацию, и она включена в коммиты, передаваемые вами, и не может быть далее изменена:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ git config --global user.name "kpa39l"
$ git config --global user.email kpa39l@yandex.ru&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Если указана опция --global, то эти настройки достаточно сделать только один раз, поскольку в этом случае Git будет использовать эти данные для всего, что вы делаете в этой системе. Если для каких-то отдельных проектов вы хотите указать другое имя или электронную почту, можно выполнить эту же команду без параметра --global в каталоге с нужным проектом.&lt;/p&gt;
&lt;p&gt;Теперь устанавливаем сам редактор:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo dpkg -i ~/Загрузки/atom-amd64.deb&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;После установки ярлык для запуска добавиться в раздел "Разработка" системного меню.
&lt;img alt="Расположения ярлыка в системном меню" src="images/2020/05/Снимок экрана_2020-05-03_15-47-43.png"&gt;
Или можно его запустить используя команду в консоли от текущего пользователя:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ atom&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Для хранения файлов можно использовать репозиторий GitHub. Ведь именно для этого как раз и выбирался редактор Atom,как имеющий встроенную
интеграцию c GitHub. Для этого нужно получить ссылку для клонирования репозитория
&lt;img alt="Копируем ссылку для клонирования репозитория" src="images/2020/05/Снимок экрана_2020-05-03_16-06-03.png"&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;https://github.com/kpa39l/gelonet.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Теперь при открытии панели с интеграцией с GitHUb (Ctrl + Shift + 8) и нажав кнопку "Clone existing repository" мы можем ввести в поле ввода эту ссылку. Чтобы не мучаться с авторизацией в ссылку можно добавить данные о логине и пароле, приведя её к виду:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://login:password@github.com/kpa39l/gelonet.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Эти действия настроят интеграцию локальной папки с репозиторием на GitHub без редактирования
файлов конфигурации.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Теперь для добства работы нужно добавить в Atom несколько плагинов для увеличения удобства работы со статическими блогами на Markdown. Для себя я определил следующий список:&lt;/li&gt;
&lt;li&gt;markdown-scroll-sync&lt;/li&gt;
&lt;li&gt;markdown-writer и зависящий от него&lt;/li&gt;
&lt;li&gt;tool-bar-markdown-writer&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Чтобы не искать их в списке пакетов достаточно выполнить в консоли команду:
&lt;code&gt;$ apm install markdown-scroll-sync tool-bar markdown-writer tool-bar-markdown-writer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;В итоге при работе с Markdown  файлами в интерфейсе редактора появится вот такая панель:
&lt;img alt="" src="images/2020/05/Снимок экрана_2020-05-03_16-36-21.png"&gt;
Часто используемые инструменты Markdown-разметки отображаются в верхней части окна и при
необходимости можно их использовать.&lt;/p&gt;</content><category term="Блог"></category><category term="pelican"></category><category term="python"></category></entry><entry><title>Статические сайты</title><link href="http://localhost:8000/static-site-generator.html" rel="alternate"></link><published>2015-07-22T08:00:00+03:00</published><updated>2015-07-22T08:00:00+03:00</updated><author><name>Kpa39l</name></author><id>tag:localhost,2015-07-22:/static-site-generator.html</id><summary type="html">&lt;!-- Cover: images/flex-screenshot.png --&gt;

&lt;hr&gt;
&lt;h1&gt;Выбор генератора статического сайта&lt;/h1&gt;
&lt;p&gt;Анализ того ресурса, что размещен на хостинге и называется моим сайтом, показал что я замечательно и без проблем живу на flat cms Grav (плоская CMS без базы данных). При этом я здорово сэкономил на хостинге. Мой месячная абонплата на &lt;a href="http://jino.ru"&gt;jino.ru&lt;/a&gt;  не дотягивала даже до 80 …&lt;/p&gt;</summary><content type="html">&lt;!-- Cover: images/flex-screenshot.png --&gt;

&lt;hr&gt;
&lt;h1&gt;Выбор генератора статического сайта&lt;/h1&gt;
&lt;p&gt;Анализ того ресурса, что размещен на хостинге и называется моим сайтом, показал что я замечательно и без проблем живу на flat cms Grav (плоская CMS без базы данных). При этом я здорово сэкономил на хостинге. Мой месячная абонплата на &lt;a href="http://jino.ru"&gt;jino.ru&lt;/a&gt;  не дотягивала даже до 80 рублей. Поэтому мне показалочь логичным сделать следующий шаг и перейти на полностью статический сайт генерируемый из текстовых файлов (мне понравился язык разметки Markdown), хранимых в каком-либо облаке, например на GitHub.&lt;/p&gt;
&lt;p&gt;Оказалось таких хитрецов как я полным-полно и в сети легко найти тонный инструментов для такой работы. Поскольку я неофит в Python и уже успел ознакомиться с шаблонизатором Jinja2, то и сформировал для себя следующий набор требований к генератору статического сайта:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Реализация на Python. Для работы и на ноутбуке с GNU\Linux и на домашнем компе с Windows 10. Опять же с исследовательскими целями полезно работать с инструментом написанном на Python.&lt;/li&gt;
&lt;li&gt;Работа с данными в файлах Markdown. Это удобный язык разметки, позволяющий легко реализовывать все нужные мне средства орагнизации текста.&lt;/li&gt;
&lt;li&gt;Работа с шаблонизатором Jinja2. Удобный и мощный шаболнизатор. Понравился мне он, да и папа мой называл меня в детстве Джинджя.&lt;/li&gt;
&lt;li&gt;Возможность работы с плагинами.
5.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;В итоге непродолжительных поисков нашёл в сети сайт &lt;a href="https://www.staticgen.com/"&gt;https://www.staticgen.com/&lt;/a&gt; и на нем по указанным параметрам отобрал вот такое вот решение:
&lt;a href="https://blog.getpelican.com/"&gt;https://blog.getpelican.com/&lt;/a&gt;
&lt;a href="https://github.com/getpelican/"&gt;https://github.com/getpelican/&lt;/a&gt;
&lt;a href="http://www.pelicanthemes.com/"&gt;http://www.pelicanthemes.com/&lt;/a&gt;&lt;/p&gt;</content><category term="Блог"></category><category term="pelican"></category><category term="site"></category></entry><entry><title>Flex: Используем темы Pelican</title><link href="http://localhost:8000/using-themes.html" rel="alternate"></link><published>2015-07-22T08:00:00+03:00</published><updated>2015-07-22T08:00:00+03:00</updated><author><name>Kpa39l</name></author><id>tag:localhost,2015-07-22:/using-themes.html</id><summary type="html">&lt;!-- Cover:  --&gt;

&lt;hr&gt;
&lt;h1&gt;Используем темыы&lt;/h1&gt;
&lt;p&gt;Подразумевается, что перед использованием информации из данной инструкции Вы уже прочитали документацию на Pelican, подготовили сайт и сформировалось жеение применить тему оформления отличную от умолчальной.&lt;/p&gt;
&lt;p&gt;Во-первых, необходимо выбрать место хранения тем оформления. Для этого примера будет использоваться директория , но Вы можете использовать любую другую. Клонируйем репозиторий pelican-themes в …&lt;/p&gt;</summary><content type="html">&lt;!-- Cover:  --&gt;

&lt;hr&gt;
&lt;h1&gt;Используем темыы&lt;/h1&gt;
&lt;p&gt;Подразумевается, что перед использованием информации из данной инструкции Вы уже прочитали документацию на Pelican, подготовили сайт и сформировалось жеение применить тему оформления отличную от умолчальной.&lt;/p&gt;
&lt;p&gt;Во-первых, необходимо выбрать место хранения тем оформления. Для этого примера будет использоваться директория , но Вы можете использовать любую другую. Клонируйем репозиторий pelican-themes в выбранную директорию на локальном компьютере:
&lt;code&gt;cd ~/pelican/projects/gelonet.ru
git clone --recursive https://github.com/getpelican/pelican-themes ./pelican-themes&lt;/code&gt;
Теперь в этой папке будет храниться содержимое репозитория.&lt;/p&gt;
&lt;p&gt;Для использования одной из полученных тем оформления нужно добавить в файл конфигурации pelican следующую строчку:
&lt;code&gt;THEME = "/home/user/pelican-themes/theme-name"&lt;/code&gt;
Например, чтобы использовать тему Flex, следует добавить вот такую строку:
&lt;code&gt;THEME = "/home/user/pelican-themes/Flex"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Сохраните изменения в файле конфигурации и перегенерируйте сайт одним из доступных средс, например с использвоанием make-файла, который был сформирован во время использования команды &lt;code&gt;pelican-quickstart&lt;/code&gt;:
&lt;code&gt;make html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Так же можно указать тему используемую для генерации сайта через параметр &lt;code&gt;-t ~/pelican-themes/Themes&lt;/code&gt; команды &lt;code&gt;pelican&lt;/code&gt;. Если требуется изменить стандартную тему, проверьте что все изменения производятся в копиях файлов темы в отдельном каталоге &lt;code&gt;~/pelican-themes/your-theme&lt;/code&gt;. Все изменения в файлах темы сгенерированных в директории output будут удалены при следующей генерации сайта.&lt;/p&gt;</content><category term="Блог"></category><category term="pelican"></category><category term="python"></category><category term="theme"></category></entry></feed>